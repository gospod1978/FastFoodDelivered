@using AspNetCoreTemplate.Common
@using AspNetCoreTemplate.Data.Models
@using Microsoft.AspNetCore.Identity
@model AspNetCoreTemplate.Web.ViewModels.Addresses.CreateAddressInputModel
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager
@{
    this.ViewData["Title"] = "Area Choues";
    var areas = Model.Areas.Select(x => new SelectListItem(x.AreaName, x.Id.ToString()));
    var cityName = Model.CityName.ToString();
    var cityId = Model.CityId;
}

<h1>@this.ViewData["Title"]</h1>

<form method="post" asp-action="Create2">
    <div class="media-body">
        <h5 class="mt-0" asp-for="CityName">@cityName</h5>
        <input type="hidden" asp-for="CityId" class="form-control" value="@cityId" />
    </div>
    <div>
        <label asp-for="AreaId"></label>
        <select asp-for="AreaId" asp-items="areas" class="form-control"></select>
        <span asp-validation-for="AreaId" class="text-danger"></span>
    </div>
    <hr />
    <input type="submit" class="btn btn-primary" />
    @if (this.User.IsInRole(GlobalConstants.AdminRoleName) ||
 this.User.IsInRole(GlobalConstants.AdministratorRoleName))
    {
        <a class="btn btn-primary" asp-area="" asp-controller="Areas" asp-action="Create">Area Create</a>
    }
    <a class="btn btn-primary" asp-area="" asp-controller="Address" asp-action="Create">Back</a>
</form>

